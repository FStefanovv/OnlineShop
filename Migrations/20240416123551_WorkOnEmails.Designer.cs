// <auto-generated />
using System;
using EFCoreVezba;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFCoreVezba.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    [Migration("20240416123551_WorkOnEmails")]
    partial class WorkOnEmails
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFCoreVezba.ApiKeyAuth.CompanyApiKey", b =>
                {
                    b.Property<string>("ApiKey")
                        .HasColumnType("text");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ApiKey");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("EFCoreVezba.Model.BankAccount", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<double>("Balance")
                        .HasColumnType("double precision");

                    b.Property<string>("CompanyId")
                        .HasColumnType("text");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            Id = "575068b2-b381-442d-8b4d-5134513dc5a0",
                            Active = true,
                            Balance = 40000.0,
                            CompanyId = "e3649b51-8804-496a-8c98-e8f24bff5827",
                            Currency = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = "50fffd8d-0689-4fa8-a52d-0fd7dfa5ae5d",
                            Active = true,
                            Balance = 100000.0,
                            CompanyId = "dabaed46-5bcc-49d5-a9c6-91496f62acf6",
                            Currency = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = "d37c6b0e-c306-4c75-a6e6-1908400163f9",
                            Active = true,
                            Balance = 15000.0,
                            Currency = 2,
                            Type = 0,
                            UserId = "1"
                        },
                        new
                        {
                            Id = "1c896ba8-90b7-4890-9ef1-f08eb0d3202a",
                            Active = true,
                            Balance = 200.0,
                            Currency = 1,
                            Type = 0,
                            UserId = "2"
                        },
                        new
                        {
                            Id = "ea7ff9d7-b0d2-4141-b726-64f58e4fe7a4",
                            Active = true,
                            Balance = 500.0,
                            Currency = 1,
                            Type = 0,
                            UserId = "3"
                        });
                });

            modelBuilder.Entity("EFCoreVezba.Model.Company", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("BankAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = "e3649b51-8804-496a-8c98-e8f24bff5827",
                            BankAccountId = "575068b2-b381-442d-8b4d-5134513dc5a0",
                            Email = "company1@example.com",
                            Name = "Company 1"
                        },
                        new
                        {
                            Id = "dabaed46-5bcc-49d5-a9c6-91496f62acf6",
                            BankAccountId = "50fffd8d-0689-4fa8-a52d-0fd7dfa5ae5d",
                            Email = "company2@example.com",
                            Name = "Company 2"
                        });
                });

            modelBuilder.Entity("EFCoreVezba.Model.Discount", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("EFCoreVezba.Model.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OrdererId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("PricePerUnit")
                        .HasColumnType("real");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrdererId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EFCoreVezba.Model.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Name", "CompanyId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "4243e6a5-9f1e-4b06-8739-70e91062c163",
                            CompanyId = "e3649b51-8804-496a-8c98-e8f24bff5827",
                            Description = "Description for Product 1",
                            Name = "Product 1",
                            Quantity = 10L,
                            UnitPrice = 20f
                        },
                        new
                        {
                            Id = "b4c437e0-f0f8-4cf4-a7d7-07a35765e7be",
                            CompanyId = "e3649b51-8804-496a-8c98-e8f24bff5827",
                            Description = "Description for Product 2",
                            Name = "Product 2",
                            Quantity = 15L,
                            UnitPrice = 30f
                        },
                        new
                        {
                            Id = "d2b10626-91ae-4ffe-bc0e-3738f80e9c9c",
                            CompanyId = "e3649b51-8804-496a-8c98-e8f24bff5827",
                            Description = "Description for Product 3",
                            Name = "Product 3",
                            Quantity = 20L,
                            UnitPrice = 25f
                        },
                        new
                        {
                            Id = "572cabab-7f0e-42a0-8352-e76bf9c6d542",
                            CompanyId = "dabaed46-5bcc-49d5-a9c6-91496f62acf6",
                            Description = "Description for Product 4",
                            Name = "Product 4",
                            Quantity = 8L,
                            UnitPrice = 25f
                        },
                        new
                        {
                            Id = "25fc9bad-a853-4b4c-8dba-774f2df7d145",
                            CompanyId = "dabaed46-5bcc-49d5-a9c6-91496f62acf6",
                            Description = "Description for Product 5",
                            Name = "Product 5",
                            Quantity = 12L,
                            UnitPrice = 35f
                        },
                        new
                        {
                            Id = "897a694c-7e25-4b46-994d-2f3bee105af3",
                            CompanyId = "dabaed46-5bcc-49d5-a9c6-91496f62acf6",
                            Description = "Description for Product 6",
                            Name = "Product 6",
                            Quantity = 18L,
                            UnitPrice = 40f
                        });
                });

            modelBuilder.Entity("EFCoreVezba.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            DateOfBirth = new DateTime(1998, 5, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "petrovic@gmail.com",
                            FirstName = "Petar",
                            LastName = "Petrovic",
                            Password = "D7BEEAF7D6E5067747D6E412887DDDE01BB7A7784273C459B208A9899BE9C377584A9FA4767748A00A103E6D2942EB4BC6533BCA9804D833F2BD074BC4B0A9AD",
                            RegisteredOn = new DateTime(2024, 4, 16, 12, 35, 49, 706, DateTimeKind.Utc).AddTicks(8927)
                        },
                        new
                        {
                            Id = "2",
                            DateOfBirth = new DateTime(1990, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "reljaprecisti@example.com",
                            FirstName = "Relja",
                            LastName = "Ostojic",
                            Password = "D7BEEAF7D6E5067747D6E412887DDDE01BB7A7784273C459B208A9899BE9C377584A9FA4767748A00A103E6D2942EB4BC6533BCA9804D833F2BD074BC4B0A9AD",
                            RegisteredOn = new DateTime(2024, 4, 16, 12, 35, 50, 318, DateTimeKind.Utc).AddTicks(8729)
                        },
                        new
                        {
                            Id = "3",
                            DateOfBirth = new DateTime(1990, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "stankela@example.com",
                            FirstName = "Coja",
                            LastName = "Stankovic",
                            Password = "D7BEEAF7D6E5067747D6E412887DDDE01BB7A7784273C459B208A9899BE9C377584A9FA4767748A00A103E6D2942EB4BC6533BCA9804D833F2BD074BC4B0A9AD",
                            RegisteredOn = new DateTime(2024, 4, 16, 12, 35, 50, 802, DateTimeKind.Utc).AddTicks(9106)
                        });
                });

            modelBuilder.Entity("EFCoreVezba.Model.BankAccount", b =>
                {
                    b.HasOne("EFCoreVezba.Model.User", null)
                        .WithMany("Accounts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EFCoreVezba.Model.Company", b =>
                {
                    b.HasOne("EFCoreVezba.Model.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("EFCoreVezba.Model.Discount", b =>
                {
                    b.HasOne("EFCoreVezba.Model.Product", null)
                        .WithMany("Discounts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreVezba.Model.Order", b =>
                {
                    b.HasOne("EFCoreVezba.Model.Company", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreVezba.Model.User", "Orderer")
                        .WithMany()
                        .HasForeignKey("OrdererId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreVezba.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Orderer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EFCoreVezba.Model.Product", b =>
                {
                    b.HasOne("EFCoreVezba.Model.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EFCoreVezba.Model.Company", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("EFCoreVezba.Model.Product", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("EFCoreVezba.Model.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
